ReactJS is a library
AngularJs is a framework

-->frame work is a collection of libraries.  Ex: AngularJS ,bootstrap, tailwindCSS.

-->library it is collection of methods or function  Ex: Reactjs, jQuery, Node.js,popperJS

-->it is a library
-->it is used to develop a single-page-application
-->it is a component bases application(components are reusable)
-->react is declarative
-->react will renders components on the web-page without page re-loading

------------------------------------------------------------------------------------
How React Works:

react code---->virtual dom(copy of real dom)--->Virual dom is comparing with real dom(that is one-to-one mapping)

-->react using diffing algorithm
-->react uses a MVC architecture

React uses three dependencies by defaultly
1.react:
 ->createElement,all-hooks

2.react-dom:
 ->used to create virtual Dom

3.react-scipt:
 ->is used to run ,debug, test, eject react-app

-->React was introduced in 2013 ,introduced by facebook(meta) , Jorden walke 
-->latest version using react is react 19

----------------------------------------------------------------------------------
How to Create React Application:

1.CDN way
2.node.js way

 a.npm
   -->is used to install ,update,delete packages in a js.
   -->packages will be installed globally.
   --yarn ,vite 

 EX: npm install -g create-react-app
     create react-app project-name
     npm create vite@latest ----->install the latest version of react

 b.npx:
  -->is used to execute the packages without installing it.
  -->no need of globally while installing packages.

 Ex:
   npx create-react-app project-name
   

Steps to create project:

create folder:
 - open New terminal change to command prompt
 -cd folder name day1
 -npm create vite@latest
 -project name: 
 -select a framework:react
 -select a variant :javascript
 -cd project name
 -npm install
 -npm run dev
 -o

proceed:y
enter the package name: react

--------------------------------------------
React folder Structure:


node-modules folder:-
 --> all the packages and third-party libraries will be present.


src folder:
  --> it is a main folder 
  -->used for creating components.


index.html file:
 -->it is a root file


eslint(ecma script lint):
  -->it is a tool used to debug purpose.

package.json file:-
  -->it stores all dependencies and third party library

README.md file:
  -->it is used for GitHub

babel folder in node_modules:
 -->will convert advanced concept of js to old version of js

----------------------------------------------------------
Components in React:

-->components are basic building blocks in react.
-->components are reusable.

components are two-types:

 1.class based component
 2.function based component / presentational component / dumb component


1.class based component:
 -->it is a es6 class in js.
 -->it uses react-life-cycle.
 -->it is a statefull component(in state by default having state and props)
 -->uses a render() method.
    render() method will renders components on the web-page.
-->it uses a constructor to store data and extends keyword.


import React from 'react'
class demo extends React.Component {
  render(){
     return <h1> I am class based component </h1>
  }
}
export default demo;


2.function based component:
 -->it is javascript pure function.
 -->it does not react-life-cycle.
 -->it doesn't take any render() method.
 -->it is a stateless
    .after react 16.8 function based component  becomes statefull component because of hooks.
 -->there is no constructor and extends in function based component
 

import React from 'react'
function demo(){
  return(
    <h1> function based component <h1>
  )
}
export default demo


import React from 'react'
let  demo=()=> {
  return(
    <h1> function based component <h1>
  )
}
export default demo

-----------------------------------------------------------
ways of creating elements:

--HTML---

 <h1>hiii frnds </h1>

---DOM in js ------

let h1 = document.createElement("h1)
console.log(h1)
h1.textContent="hello"

-----React--------

React.createElement("tag-name", "null or {id: "demo"} ", "content")

Ex:
 React.createElement("h1", "null", "hello")

Ex:
 React.createElement("div", {id: "demo"}, React.createElement("span", "null", "hello"))


-------------------------------------------------------------------------------------

---JSX (java-script XML)-----

-->it is used to create html in react
-->it is neither stirng nor html


--rules:----
1.all the elements should en-closed

Ex:
 <img \>
 <h1 \>

2.if there is a more than one element it should be wrapped inside parent element of fragmnent.
 Ex:

  <div>
  <h1> hello </h1>
  <h2> hello </h2>
  </div>

  <> ----> fragment(react 16.8) to save the memory in virtual dom.
  <h1> hello </h1>
  <h2> hello </h2>
  </>

3.use {} for writing expression.

Ex: <h1> {5+5} </h1>



-->rafce

------------------------------------------------------------------------------
Props in React:

-->props stands for properties.
-->in react props are like a attributes.
-->used to send data from one component to another component.
-->props are uni-direction.
-->props are immutable(read-only).
-->props is an object.


-->javascript code will return above the return method
--> html code will return below the return keyword



-------------------------------------------------------
Assignment:

  https://cdnjs.com
  https://www.spotify.com/in-en/student/


-----------------------------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="./demo.css">
</head>
<body>
    <main id="nav">
        <nav id="sub-nav">
            <span>
                <svg id="Layer_1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 823.46 225.25"><g fill-rule="evenodd" class="svelte-1gcdbl9"><path d="m125.52,3.31C65.14.91,14.26,47.91,11.86,108.29c-2.4,60.38,44.61,111.26,104.98,113.66,60.38,2.4,111.26-44.6,113.66-104.98C232.89,56.59,185.89,5.7,125.52,3.31Zm46.18,160.28c-1.36,2.4-4.01,3.6-6.59,3.24-.79-.11-1.58-.37-2.32-.79-14.46-8.23-30.22-13.59-46.84-15.93-16.62-2.34-33.25-1.53-49.42,2.4-3.51.85-7.04-1.3-7.89-4.81-.85-3.51,1.3-7.04,4.81-7.89,17.78-4.32,36.06-5.21,54.32-2.64,18.26,2.57,35.58,8.46,51.49,17.51,3.13,1.79,4.23,5.77,2.45,8.91Zm14.38-28.72c-2.23,4.12-7.39,5.66-11.51,3.43-16.92-9.15-35.24-15.16-54.45-17.86-19.21-2.7-38.47-1.97-57.26,2.16-1.02.22-2.03.26-3.01.12-3.41-.48-6.33-3.02-7.11-6.59-1.01-4.58,1.89-9.11,6.47-10.12,20.77-4.57,42.06-5.38,63.28-2.4,21.21,2.98,41.46,9.62,60.16,19.74,4.13,2.23,5.66,7.38,3.43,11.51Zm15.94-32.38c-2.1,4.04-6.47,6.13-10.73,5.53-1.15-.16-2.28-.52-3.37-1.08-19.7-10.25-40.92-17.02-63.07-20.13-22.15-3.11-44.42-2.45-66.18,1.97-5.66,1.15-11.17-2.51-12.32-8.16-1.15-5.66,2.51-11.17,8.16-12.32,24.1-4.89,48.74-5.62,73.25-2.18,24.51,3.44,47.99,10.94,69.81,22.29,5.12,2.66,7.11,8.97,4.45,14.09Z"></path><path d="m318.54,169.81c-18.87,0-35.07-6.53-41.84-13.95-.64-.73-.73-1.13-.73-2.02v-22.09c0-1.05.89-1.45,1.61-.56,8.14,10.16,25.48,18.46,39.67,18.46,11.29,0,18.87-3.06,18.87-13.06,0-5.97-2.82-9.84-18.22-14.19l-8.87-2.5c-20.56-5.8-33.06-12.66-33.06-32.33,0-17.41,16.12-32.73,43.05-32.73,13.22,0,26.36,4.11,33.94,9.76.64.48.89.97.89,1.85v20.08c0,1.37-1.13,1.77-2.18.89-6.13-5.08-17.98-11.93-32.01-11.93s-20.64,6.29-20.64,12.09c0,6.13,4.27,7.82,19.51,12.34l7.58,2.26c23.46,7.01,33.06,16.85,33.06,33.14,0,20.96-17.41,34.51-40.63,34.51Zm164.39-42.09c0-12.82,8.87-22.33,21.37-22.33s21.28,9.51,21.28,22.33-8.87,22.33-21.28,22.33-21.37-9.51-21.37-22.33Zm21.28,42.09c26.04,0,44.18-18.62,44.18-42.09s-18.14-42.09-44.18-42.09-44.1,18.46-44.1,42.09,17.98,42.09,44.1,42.09Zm157.22-89.01v6.77h-13.71c-.73,0-1.13.4-1.13,1.13v16.12c0,.73.4,1.13,1.13,1.13h13.71v60.79c0,.73.4,1.13,1.13,1.13h20.64c.73,0,1.13-.4,1.13-1.13v-60.79h17.66l25.64,55.71-13.79,30.31c-.4.89.08,1.29.89,1.29h22.01c.73,0,1.05-.16,1.37-.89l45.55-103.52c.32-.73-.08-1.29-.89-1.29h-20.64c-.73,0-1.05.16-1.37.89l-20.8,49.99-20.88-49.99c-.32-.73-.64-.89-1.37-.89h-33.38v-5.32c0-8.71,5.89-12.74,13.46-12.74,4.51,0,9.43,2.34,12.9,4.43.81.48,1.37-.08,1.05-.81l-7.26-17.33c-.24-.56-.56-.89-1.13-1.21-3.55-1.85-9.35-3.47-15-3.47-17.09,0-26.93,13.06-26.93,29.67Zm-243,88.52c20.64,0,35.47-17.82,35.47-41.76s-15-41.44-35.64-41.44c-15.32,0-24.19,9.35-29.35,18.7v-16.12c0-.73-.4-1.13-1.13-1.13h-20.24c-.73,0-1.13.4-1.13,1.13v103.44c0,.73.4,1.13,1.13,1.13h20.24c.73,0,1.13-.4,1.13-1.13v-41.36c5.16,9.35,13.87,18.54,29.51,18.54Zm172.21-.32c6.77,0,13.3-1.77,17.17-4.03.56-.32.64-.64.64-1.21v-15.32c0-.81-.4-1.05-1.13-.64-2.34,1.29-5.4,2.34-9.59,2.34-6.61,0-10.8-3.87-10.8-12.42v-31.77h20.16c.73,0,1.13-.4,1.13-1.13v-16.12c0-.73-.4-1.13-1.13-1.13h-20.16v-21.04c0-.89-.56-1.37-1.37-.73l-36.04,28.38c-.48.4-.64.81-.64,1.45v9.19c0,.73.4,1.13,1.13,1.13h14.03v35.15c0,19.03,10.96,27.9,26.61,27.9Zm23.3-105.29c0,7.26,5.64,12.74,13.38,12.74s13.54-5.48,13.54-12.74-5.64-12.74-13.54-12.74-13.38,5.48-13.38,12.74Zm3.14,104.17h20.64c.73,0,1.13-.4,1.13-1.13v-78.04c0-.73-.4-1.13-1.13-1.13h-20.64c-.73,0-1.13.4-1.13,1.13v78.04c0,.73.4,1.13,1.13,1.13Zm-228.65-40.47c3.71-12.42,12.25-21.93,23.86-21.93s18.7,8.38,18.7,22.09-7.66,22.25-18.7,22.25-20.16-10.64-23.86-22.41Z"></path><path d="m810.1,92.31c-1.06-1.83-2.53-3.26-4.41-4.3-1.88-1.03-3.98-1.55-6.32-1.55s-4.44.52-6.32,1.55c-1.88,1.04-3.35,2.47-4.41,4.3-1.06,1.83-1.59,3.9-1.59,6.21s.53,4.34,1.59,6.17c1.06,1.83,2.53,3.26,4.41,4.3,1.88,1.04,3.98,1.55,6.32,1.55s4.44-.52,6.32-1.55,3.35-2.47,4.41-4.3c1.06-1.83,1.59-3.88,1.59-6.17s-.53-4.38-1.59-6.21Zm-1.93,11.36c-.86,1.52-2.06,2.7-3.59,3.56-1.53.85-3.27,1.28-5.2,1.28s-3.72-.43-5.25-1.28c-1.53-.85-2.72-2.04-3.57-3.56-.85-1.51-1.27-3.23-1.27-5.15s.42-3.63,1.27-5.13c.85-1.5,2.04-2.68,3.57-3.53,1.53-.85,3.28-1.28,5.25-1.28s3.67.43,5.2,1.28c1.53.85,2.73,2.04,3.59,3.56.86,1.52,1.29,3.23,1.29,5.15s-.43,3.59-1.29,5.11Z"></path><path d="m803.56,98.29c.82-.6,1.23-1.4,1.23-2.39s-.4-1.83-1.2-2.43c-.8-.6-1.96-.9-3.48-.9h-5.36v11.2h2.59v-4.45h1.41l3.41,4.45h3.18l-3.73-4.72c.79-.15,1.46-.4,1.96-.77Zm-3.86-.99h-2.36v-2.74h2.45c.73,0,1.29.11,1.68.34.39.23.59.58.59,1.06,0,.45-.21.79-.61,1.01-.41.23-.99.34-1.75.34Z"></path></g></svg>
            </span>
            <ol>
                <li id="demo">Premium</li>
                <li>Support</li>
                <li>Download</li>
                <li>|</li>
                <li>Sign up</li>
                <li>Login in</li>
            </ol>
        </nav>
    </main>
    <div id="model">

    </div>
    <script src="./demo.js"></script>
</body>
</html>


-----css---------------
*{
    margin: 0%;
    padding: 0%;
    box-sizing: border-box;
}

body{
    font-family: SpotifyMixUI, CircularSp-Arab, CircularSp-Hebr, CircularSp-Cyrl, CircularSp-Grek, CircularSp-Deva , sans-serif;
}

#nav{
    /* border: 2px solid; */
    height: 80px;
    background-color: #000;
    color: #fff;
}

#sub-nav{
    /* border: 2px solid red; */
    height: inherit;
    width: 65%;
    margin: auto;
    display: flex;
    align-items: center;
    justify-content: space-between;
}

#sub-nav span svg{
    height: 2.5em;
    fill: #fff;
}

#sub-nav ol{
    list-style: none;
    /* border: 2px solid green; */
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 500px;
    font-size: 16px;
    font-weight: 700;
}

ol li:hover{
    color: #1ed760;
    cursor: pointer;
}

#model{
    border: 5px solid;
    height: 400px;
    width: 200px;
    position: absolute;
    left: 43%;
    display: none;
}


----------------------js------------------

// let a = document.createElement("h1")
// console.log(a);
// a.textContent = "hello-world"

// document.body.appendChild(a)

// a.style.backgroundColor = "red"

// // --------------------------------

// //create a div-tag
// let div = document.createElement("div")
// console.log(div);

// //append div-tag to body-tag
// document.body.appendChild(div)

// div.style.border = "5px solid"

// //create a ol-tag
// let ol = document.createElement("ol")
// console.log(ol);

// //append ol-tag to div-tag
// div.appendChild(ol)

// //create an li-tag
// let li1 = document.createElement("li")
// console.log(li1);
// li1.textContent = "react"

// //append li-tag to ol-tag
// ol.appendChild(li1)

// //create an li-tag
// let li2 = document.createElement("li")
// console.log(li2);
// li2.textContent = "node.js"

// //append li-tag to ol-tag
// ol.appendChild(li2)

// ol.setAttribute("type" , "i")

// // ------------------------------

// // create a table
// let table = document.createElement("table")
// console.log(table);

// //append table-tag to body-tag
// document.body.appendChild(table)

// //creating border for table-tag
// table.setAttribute("border" , "2px solid")

// //create a tr-tag
// let tr1 = document.createElement("tr")
// console.log(tr1);

// //append tr-tag to table-tag
// table.appendChild(tr1)

// //create a td-tag
// let td1 = document.createElement("td")
// console.log(td1);
// td1.textContent = "hello"

// //append td-tag to tr-tag
// tr1.appendChild(td1)

// //create a td-tag
// let td2 = document.createElement("td")
// console.log(td2);
// td2.textContent = "hello"

// //append td-tag to tr-tag
// tr1.appendChild(td2)

// //create a td-tag
// let td3 = document.createElement("td")
// console.log(td3);
// td3.textContent = "hello"

// //append td-tag to tr-tag
// tr1.appendChild(td3)

let demo = document.getElementById("demo")
console.log(demo);

demo.addEventListener("mouseover" , () => {
    // console.log("hello");

    let model = document.getElementById("model")
    console.log(model);
    model.style.display = "block"

})

demo.addEventListener("mouseleave" , () => {
    // console.log("hello");

    let model = document.getElementById("model")
    console.log(model);
    model.style.display = "none"
    window.open("https://support.spotify.com/in-en/")

})








-----------------------------------------------------------------------
state in react:
 
-->state is used to store data in the same component and update the data in the component
-->state is mutable(we can read and write)

syntax:

import {useState} from 'react';
let[state, setState]= usestate(initial-value)

state -is used to store the initial value 
setState-is used to update the state


------------------------------------------------------------------
ways of using styles in react:

1.inline way
2.globally CSS way
3.external CSS way(important)-->it is reusable

-----------------------------------------------------------------
useRef hook  in react:

-->ref stands for reference
-->useRef uses real-dom
-->useRef is used for un-controlled forms
-->useRef is having object called current
-->it uses ref keyword

syntax:-

import {useRef} from 'react';

let identifier = useRef()



1.Basic hooks
2.Advanced hooks -->usecallback, 

note: hooks were introduced in React 16.8
   -->hooks works only in the function based component


----------------------------------------------------
List and Keys in React:

-->list is used to iterate array using map()  method
-->keys are used to track an element.
-->Using keys will understand which element is created, updated and deleted


Advantage:
-->improves component efficiency.
-->improves optimization of the browser.

fragment--->it will saves the memory in virtual dom

-------------------------------------------------------------
CODEVALUATION -YOUTUBE FOR REACT
------------------------------------------------------------
how to avoid props drilling:

1.useContext hook
2.HOC(Higher order component)
3.Redux

----------------------------------------------------------------
1.useContext hook in React(important):

-->used to send data from one component to multiple component without passing/using a props.
-->it is used to avoid props drilling.

syntax:

import React from 'react';

step-1:- create a useContext and export it

export let/var/const   identifier-name= React.createContext(initial-value)

step-2:- use provider to pass the value.
<identifier-name.provider value={}>
    <Child component/>
</identifier-name.provider>

step-3:-use consumer to consume value given by provider 

import context from 'path'
<identifier-name.consumer>
  {
    cbf
   }
</identifier-name.consumer>

-------------------------------------------------------------------
useEffect hook in react(important):

-->it is used to provide side effect for function based component
-->in react we can tell to component to perform something after component renders.

-->useEffect will avoids React-life-cycle
-->componentDidMount
-->ComponentDidUpdate
-->ComponentwillUnMount


Advantage:
-->it is used for updating a DOM
-->used for timer
-->used to fetch an api


syntax:

import {useEffect} from 'react'

useEffect(callbackfunction ,dependency)

 pass the dependency in 3-ways:

1.no dependency -->component will renders infinite
2.empty dependency -->component will render only once
3.dependency with value(state , props) -->component will render only when the value changes

--------------------------------------------------------------------------------------
Browser Routers in react:

--> it is library
-->it is use to interact one component to multiple component.
-->Routes -- it is a pre-defined component used to wrap Route.
-->Route --is a pre-defined component used routing purpose.
-->Browser Router -- is a pre-defined component used to wrap Routes.
-->useNavigate() -- it is used to navigate component.
-->useParmes() hook -- it is used to target pre-defined variable.
--> <Link></Link> -- is used for linking purpose
--> <outLet></outLet> -- used for place-holder.


--------------------------------
what is single page application:-

-->single page application is used to link one component to another component without a page reloading.


--------------------------------------------------------------
to install json :

--> npm install -g json-server
--> json-server --watch users.json --port=8081

1.run the server
Component - Home,Create,Edit

--> npm install react-router-dom@6  - for routing purpose
--> npm install axios





